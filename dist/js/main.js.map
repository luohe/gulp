{"version":3,"sources":["main.js","./src/js/main.js","./src/js/ui/slider.js"],"names":["webpackJsonp","module","exports","require","_interopRequireDefault","obj","__esModule","default","_jquery","_jquery2","_slider","_slider2","fn","slider","console","log","dots","fluid","arrows","click","this","className","split","data","$","Slider","f","el","items","sizes","max","current","interval","opts","speed","delay","complete","_","init","ul","children","outerWidth","outerHeight","each","calculate","extend","setup","index","me","width","height","css","overflow","first","length","position","start","hover","stop","resize","Math","min","round","parent","window","append","find","indexOf","isFunction","prev","next","event","swipe","on","move","cb","eq","target","is","addClass","siblings","removeClass","animate","left","setInterval","clearInterval","html","o","len","instance"],"mappings":"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","file":"main.js","sourcesContent":["webpackJsonp([2],[\n/* 0 */\n/***/ function(module, exports, require) {\n\n\t'use strict';\n\t\n\tvar _jquery = require(3);\n\t\n\tvar _jquery2 = _interopRequireDefault(_jquery);\n\t\n\tvar _slider = require(1);\n\t\n\tvar _slider2 = _interopRequireDefault(_slider);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/*! functions.js */\n\t_jquery2.default.fn.slider = _slider2.default;\n\tconsole.log(_jquery2.default);\n\tvar slider = (0, _jquery2.default)('.banner').slider({\n\t  dots: true,\n\t  fluid: true,\n\t  arrows: true\n\t});\n\t(0, _jquery2.default)('.slider-arrow').click(function () {\n\t  var fn = this.className.split(' ')[1];\n\t\n\t  //  Either do slider.data('slider').next() or .prev() depending on the className\n\t  slider.data('slider')[fn]();\n\t});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, require) {\n\n\t'use strict';\n\t\n\tvar $ = require(3);\n\t\n\tvar Slider = function Slider() {\n\t\n\t  var f = false;\n\t\n\t  this.el = f;\n\t  this.items = f;\n\t\n\t  //  Dimensions\n\t  this.sizes = [];\n\t  this.max = [0, 0];\n\t\n\t  //  Current inded\n\t  this.current = 0;\n\t\n\t  //  Start/stop timer\n\t  this.interval = f;\n\t\n\t  //  Set some options\n\t  this.opts = {\n\t    speed: 500,\n\t    delay: 3000, // f for no autoplay\n\t    complete: f, // when a slide's finished\n\t    dots: f, // display pagination\n\t    fluid: f // is it a percentage width?,\n\t  };\n\t\n\t  //  Create a deep clone for methods where context changes\n\t  var _ = this;\n\t\n\t  this.init = function (el, opts) {\n\t    this.el = el;\n\t    this.ul = el.children('ul');\n\t    this.max = [el.outerWidth(), el.outerHeight()];\n\t    this.items = this.ul.children('li').each(this.calculate);\n\t\n\t    //  Check whether we're passing any options in to Slider\n\t    this.opts = $.extend(this.opts, opts);\n\t\n\t    //  Set up the Slider\n\t    this.setup();\n\t\n\t    return this;\n\t  };\n\t\n\t  //  Get the width for an element\n\t  //  Pass a jQuery element as the context with .call(), and the index as a parameter: Slider.calculate.call($('li:first'), 0)\n\t  this.calculate = function (index) {\n\t    var me = $(this),\n\t        width = me.outerWidth(),\n\t        height = me.outerHeight();\n\t\n\t    //  Add it to the sizes list\n\t    _.sizes[index] = [width, height];\n\t\n\t    //  Set the max values\n\t    if (width > _.max[0]) _.max[0] = width;\n\t    if (height > _.max[1]) _.max[1] = height;\n\t  };\n\t\n\t  //  Work out what methods need calling\n\t  this.setup = function () {\n\t    //  Set the main element\n\t    this.el.css({\n\t      overflow: 'hidden',\n\t      width: _.max[0],\n\t      height: this.items.first().outerHeight()\n\t    });\n\t\n\t    //  Set the relative widths\n\t    this.ul.css({ width: this.items.length * 100 + '%', position: 'relative' });\n\t    this.items.css('width', 100 / this.items.length + '%');\n\t\n\t    if (this.opts.delay !== f) {\n\t      this.start();\n\t      this.el.hover(this.stop, this.start);\n\t    }\n\t\n\t    //  Dot pagination\n\t    this.opts.dots && this.dots();\n\t\n\t    //  Little patch for fluid-width sliders. Screw those guys.\n\t    if (this.opts.fluid) {\n\t      var resize = function resize() {\n\t        _.el.css('width', Math.min(Math.round(_.el.outerWidth() / _.el.parent().outerWidth() * 100), 100) + '%');\n\t      };\n\t\n\t      resize();\n\t      $(window).resize(resize);\n\t    }\n\t    if (this.opts.arrows) {\n\t      this.el.parent().append('<div class=\"slider-arrow prev\"><i></i></div><div class=\"slider-arrow next\"><i></i></div>').find('.slider-arrow').click(function () {\n\t        if (this.className.indexOf('prev') > 0) {\n\t          $.isFunction(_.prev) && _.prev();\n\t        } else if (this.className.indexOf('next') > 0) {\n\t          $.isFunction(_.next) && _.next();\n\t        }\n\t      });\n\t    };\n\t\n\t    //  Swipe support\n\t    if ($.event.swipe) {\n\t      this.el.on('swipeleft', _.prev).on('swiperight', _.next);\n\t    }\n\t  };\n\t\n\t  //  Move Slider to a slide index\n\t  this.move = function (index, cb) {\n\t    //  If it's out of bounds, go to the first slide\n\t    if (!this.items.eq(index).length) index = 0;\n\t    if (index < 0) index = this.items.length - 1;\n\t\n\t    var target = this.items.eq(index);\n\t    var obj = { height: target.outerHeight() };\n\t    var speed = cb ? 5 : this.opts.speed;\n\t\n\t    if (!this.ul.is(':animated')) {\n\t      //  Handle those pesky dots\n\t      _.el.find('.dot:eq(' + index + ')').addClass('active').siblings().removeClass('active');\n\t\n\t      this.el.animate(obj, speed) && this.ul.animate($.extend({ left: '-' + index + '00%' }, obj), speed, function (data) {\n\t        _.current = index;\n\t        $.isFunction(_.opts.complete) && !cb && _.opts.complete(_.el);\n\t      });\n\t    }\n\t  };\n\t\n\t  //  Autoplay functionality\n\t  this.start = function () {\n\t    _.interval = setInterval(function () {\n\t      _.move(_.current + 1);\n\t    }, _.opts.delay);\n\t  };\n\t\n\t  //  Stop autoplay\n\t  this.stop = function () {\n\t    _.interval = clearInterval(_.interval);\n\t    return _;\n\t  };\n\t\n\t  //  Arrow navigation\n\t  this.next = function () {\n\t    return _.stop().move(_.current + 1);\n\t  };\n\t  this.prev = function () {\n\t    return _.stop().move(_.current - 1);\n\t  };\n\t\n\t  this.dots = function () {\n\t    //  Create the HTML\n\t    var html = '<ol class=\"dots\">';\n\t    $.each(this.items, function (index) {\n\t      html += '<li class=\"dot' + (index < 1 ? ' active' : '') + '\">' + (index + 1) + '</li>';\n\t    });\n\t    html += '</ol>';\n\t\n\t    //  Add it to the Slider\n\t    this.el.addClass('has-dots').append(html).find('.dot').click(function () {\n\t      _.move($(this).index());\n\t    });\n\t  };\n\t};\n\t\n\t//  Create a jQuery plugin\n\tmodule.exports = function (o) {\n\t  var len = this.length;\n\t\n\t  //  Enable multiple-slider support\n\t  return this.each(function (index) {\n\t    //  Cache a copy of $(this), so it\n\t    var me = $(this);\n\t    var instance = new Slider().init(me, o);\n\t\n\t    //  Invoke an Slider instance\n\t    me.data('slider' + (len > 1 ? '-' + (index + 1) : ''), instance);\n\t  });\n\t};\n\n/***/ }\n])","'use strict';\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _slider = require('./ui/slider');\n\nvar _slider2 = _interopRequireDefault(_slider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*! functions.js */\n_jquery2.default.fn.slider = _slider2.default;\nconsole.log(_jquery2.default);\nvar slider = (0, _jquery2.default)('.banner').slider({\n  dots: true,\n  fluid: true,\n  arrows: true\n});\n(0, _jquery2.default)('.slider-arrow').click(function () {\n  var fn = this.className.split(' ')[1];\n\n  //  Either do slider.data('slider').next() or .prev() depending on the className\n  slider.data('slider')[fn]();\n});","'use strict';\n\nvar $ = require('jquery');\n\nvar Slider = function Slider() {\n\n  var f = false;\n\n  this.el = f;\n  this.items = f;\n\n  //  Dimensions\n  this.sizes = [];\n  this.max = [0, 0];\n\n  //  Current inded\n  this.current = 0;\n\n  //  Start/stop timer\n  this.interval = f;\n\n  //  Set some options\n  this.opts = {\n    speed: 500,\n    delay: 3000, // f for no autoplay\n    complete: f, // when a slide's finished\n    dots: f, // display pagination\n    fluid: f // is it a percentage width?,\n  };\n\n  //  Create a deep clone for methods where context changes\n  var _ = this;\n\n  this.init = function (el, opts) {\n    this.el = el;\n    this.ul = el.children('ul');\n    this.max = [el.outerWidth(), el.outerHeight()];\n    this.items = this.ul.children('li').each(this.calculate);\n\n    //  Check whether we're passing any options in to Slider\n    this.opts = $.extend(this.opts, opts);\n\n    //  Set up the Slider\n    this.setup();\n\n    return this;\n  };\n\n  //  Get the width for an element\n  //  Pass a jQuery element as the context with .call(), and the index as a parameter: Slider.calculate.call($('li:first'), 0)\n  this.calculate = function (index) {\n    var me = $(this),\n        width = me.outerWidth(),\n        height = me.outerHeight();\n\n    //  Add it to the sizes list\n    _.sizes[index] = [width, height];\n\n    //  Set the max values\n    if (width > _.max[0]) _.max[0] = width;\n    if (height > _.max[1]) _.max[1] = height;\n  };\n\n  //  Work out what methods need calling\n  this.setup = function () {\n    //  Set the main element\n    this.el.css({\n      overflow: 'hidden',\n      width: _.max[0],\n      height: this.items.first().outerHeight()\n    });\n\n    //  Set the relative widths\n    this.ul.css({ width: this.items.length * 100 + '%', position: 'relative' });\n    this.items.css('width', 100 / this.items.length + '%');\n\n    if (this.opts.delay !== f) {\n      this.start();\n      this.el.hover(this.stop, this.start);\n    }\n\n    //  Dot pagination\n    this.opts.dots && this.dots();\n\n    //  Little patch for fluid-width sliders. Screw those guys.\n    if (this.opts.fluid) {\n      var resize = function resize() {\n        _.el.css('width', Math.min(Math.round(_.el.outerWidth() / _.el.parent().outerWidth() * 100), 100) + '%');\n      };\n\n      resize();\n      $(window).resize(resize);\n    }\n    if (this.opts.arrows) {\n      this.el.parent().append('<div class=\"slider-arrow prev\"><i></i></div><div class=\"slider-arrow next\"><i></i></div>').find('.slider-arrow').click(function () {\n        if (this.className.indexOf('prev') > 0) {\n          $.isFunction(_.prev) && _.prev();\n        } else if (this.className.indexOf('next') > 0) {\n          $.isFunction(_.next) && _.next();\n        }\n      });\n    };\n\n    //  Swipe support\n    if ($.event.swipe) {\n      this.el.on('swipeleft', _.prev).on('swiperight', _.next);\n    }\n  };\n\n  //  Move Slider to a slide index\n  this.move = function (index, cb) {\n    //  If it's out of bounds, go to the first slide\n    if (!this.items.eq(index).length) index = 0;\n    if (index < 0) index = this.items.length - 1;\n\n    var target = this.items.eq(index);\n    var obj = { height: target.outerHeight() };\n    var speed = cb ? 5 : this.opts.speed;\n\n    if (!this.ul.is(':animated')) {\n      //  Handle those pesky dots\n      _.el.find('.dot:eq(' + index + ')').addClass('active').siblings().removeClass('active');\n\n      this.el.animate(obj, speed) && this.ul.animate($.extend({ left: '-' + index + '00%' }, obj), speed, function (data) {\n        _.current = index;\n        $.isFunction(_.opts.complete) && !cb && _.opts.complete(_.el);\n      });\n    }\n  };\n\n  //  Autoplay functionality\n  this.start = function () {\n    _.interval = setInterval(function () {\n      _.move(_.current + 1);\n    }, _.opts.delay);\n  };\n\n  //  Stop autoplay\n  this.stop = function () {\n    _.interval = clearInterval(_.interval);\n    return _;\n  };\n\n  //  Arrow navigation\n  this.next = function () {\n    return _.stop().move(_.current + 1);\n  };\n  this.prev = function () {\n    return _.stop().move(_.current - 1);\n  };\n\n  this.dots = function () {\n    //  Create the HTML\n    var html = '<ol class=\"dots\">';\n    $.each(this.items, function (index) {\n      html += '<li class=\"dot' + (index < 1 ? ' active' : '') + '\">' + (index + 1) + '</li>';\n    });\n    html += '</ol>';\n\n    //  Add it to the Slider\n    this.el.addClass('has-dots').append(html).find('.dot').click(function () {\n      _.move($(this).index());\n    });\n  };\n};\n\n//  Create a jQuery plugin\nmodule.exports = function (o) {\n  var len = this.length;\n\n  //  Enable multiple-slider support\n  return this.each(function (index) {\n    //  Cache a copy of $(this), so it\n    var me = $(this);\n    var instance = new Slider().init(me, o);\n\n    //  Invoke an Slider instance\n    me.data('slider' + (len > 1 ? '-' + (index + 1) : ''), instance);\n  });\n};"],"sourceRoot":"webpack-module://"}